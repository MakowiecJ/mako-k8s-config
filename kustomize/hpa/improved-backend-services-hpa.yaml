# Improved Horizontal Pod Autoscaler for Backend Services
# This will automatically scale your Spring Boot applications based on CPU and Memory usage

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: mako-api-gateway-hpa
  namespace: mako-services
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mako-api-gateway
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: mako-users-hpa
  namespace: mako-services
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mako-users
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: mako-accounts-hpa
  namespace: mako-services
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mako-accounts
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: mako-transactions-hpa
  namespace: mako-services
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mako-transactions
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: mako-notifications-hpa
  namespace: mako-services
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mako-notifications
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: mako-service-registry-hpa
  namespace: mako-services
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mako-service-registry
  minReplicas: 1
  maxReplicas: 2  # Service registry doesn't need as much scaling
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80  # Higher threshold for service registry
